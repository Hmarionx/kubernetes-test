apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  selector:
    app.kubernetes.io/name: grafana
  ports:
    - port: 3000
      protocol: TCP
      targetPort: 3000

---
kind: "PersistentVolumeClaim"
apiVersion: "v1"
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  accessModes:
    - "ReadWriteOnce"
  storageClassName: local-path
  resources:
    requests:
      storage: "1Gi"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: monitoring
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/instance: grafana
spec:
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/instance: grafana
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/instance: grafana
      annotations:
        fluentbit.io/parser: logfmt
    spec:
      nodeSelector:
        kubernetes.io/os: linux
        node-role.kubernetes.io/master: "true"
      containers:
        - image: grafana/grafana:7.5.3
          name: grafana
          env:
           - name: GF_INSTALL_PLUGINS
             value: grafana-piechart-panel
          ports:
            - containerPort: 3000
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 2500Mi
            requests:
              cpu: 100m
              memory: 100Mi
          volumeMounts:
            - mountPath: /var/lib/grafana
              name: data
      restartPolicy: Always
      volumes:
        - name: "data"
          persistentVolumeClaim:
            claimName: grafana
