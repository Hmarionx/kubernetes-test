---
# Source: minio/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: db
  name: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
  annotations:
    prometheus.io/path: /minio/v2/metrics/cluster
    prometheus.io/port: "9000"
    prometheus.io/scheme: http
    prometheus.io/scrape: "true"
spec:
  ports:
    - name: http
      port: 9000
      protocol: TCP
      targetPort: 9000
  selector:
    app.kubernetes.io/name: minio
---
# Source: minio/templates/statefulset.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: db
  name: minio-svc
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
spec:
  publishNotReadyAddresses: true
  ports:
    - name: http
      port: 9000
      protocol: TCP
  selector:
    app.kubernetes.io/name: minio
---
# Source: minio/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: db
  name: minio
  labels:
    app.kubernetes.io/name: minio
    app.kubernetes.io/instance: minio
spec:
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: "Parallel"
  serviceName: minio-svc
  replicas: 4
  selector:
    matchLabels:
      app.kubernetes.io/name: minio
  template:
    metadata:
      name: minio
      labels:
        app.kubernetes.io/name: minio
        app.kubernetes.io/instance: minio
    spec:
      serviceAccountName: minio
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
        - name: minio
          image: minio/minio:RELEASE.2021-07-08T19-43-25Z
          imagePullPolicy: IfNotPresent
          command: [ "/bin/sh",
            "-ce",
            "/usr/bin/docker-entrypoint.sh minio -S /etc/minio/certs/ server http://minio-{0...3}.minio-svc.db.svc.cluster.local/export" ]
          volumeMounts:
            - name: export
              mountPath: /export
          ports:
            - name: http
              containerPort: 9000
          env:
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: accesskey
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio
                  key: secretkey
          resources:
            requests:
              memory: 1Gi
          livenessProbe:
            httpGet:
              path: /minio/health/live
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /minio/health/cluster
              port: 9000
              scheme: HTTP
            initialDelaySeconds: 120
            periodSeconds: 15
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 3
      nodeSelector:
        kubernetes.io/os: linux
        repe.re/type: db
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: name
                operator: In
                values:
                - minio
            topologyKey: kubernetes.io/hostname
      volumes:
        - name: minio-user
          secret:
            secretName: minio
  volumeClaimTemplates:
    - metadata:
        name: export
      spec:
        accessModes: [ "ReadWriteOnce" ]
        storageClassName: local-path
        resources:
          requests:
            storage: 50Gi
